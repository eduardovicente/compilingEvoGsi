From 2ff789f73b0442c623eccd922c4f4c7068086b5c Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sat, 17 Jun 2023 08:31:55 -0400
Subject: [PATCH] Add Mediatek power hints on touch

Mediatek has multiple HALs (which existed concurrently), so it is a bit
of a mess.
From what I can tell, mOldMtkPerf is used on Android 10 vendors, while
mMtkPerf is used on Android 11/12 vendors.
If anyone has an Android 9 vendor and want to take a look, I think it
would be something like this:
vendor.mediatek.hardware.power.V2_0.IPower.powerHint()

On some devices, sending the touch boost isn't very helpful. Our guess
is that Android 12 rendering got a lot heavier, and then touch boost is
not enough. So, we add a property to /cheat/ and report a bigger boost:
APP_ROTATE.
On the few devices we've seen, touch boost only boosts scheduler, while
app rotate will also for cpu min frequency.
Experimentally using this app rotate boost indeed makes the device much
smoother.

Change-Id: I9f1eac5a20b98920a5d0c8204fe4d165ba069f5a
---
 services/core/Android.bp                      |  4 +-
 .../com/android/server/wm/DisplayPolicy.java  | 49 +++++++++++++++++++
 2 files changed, 52 insertions(+), 1 deletion(-)

diff --git a/services/core/Android.bp b/services/core/Android.bp
index 55320bd17..cee2d4a6d 100644
--- a/services/core/Android.bp
+++ b/services/core/Android.bp
@@ -189,7 +189,9 @@ java_library_static {
         "securebox",
         "vendor.aospa.biometrics.face",
         "vendor.aac.hardware.richtap.vibrator",
-        "vendor.samsung.hardware.sysinput-V1.2-java", // HIDL
+        // HIDL
+        "vendor.mediatek.hardware.mtkpower-V1.1-java",
+        "vendor.samsung.hardware.sysinput-V1.2-java",
     ],
     javac_shard_size: 50,
     javacflags: [
diff --git a/services/core/java/com/android/server/wm/DisplayPolicy.java b/services/core/java/com/android/server/wm/DisplayPolicy.java
index 220d96c77..46d64ad1c 100644
--- a/services/core/java/com/android/server/wm/DisplayPolicy.java
+++ b/services/core/java/com/android/server/wm/DisplayPolicy.java
@@ -236,6 +236,9 @@ public class DisplayPolicy {
      */
     private boolean mRemoteInsetsControllerControlsSystemBars;
 
+    private vendor.mediatek.hardware.mtkpower.V1_1.IMtkPerf mMtkPerf;
+    private vendor.mediatek.hardware.mtkpower.V1_0.IMtkPower mOldMtkPerf;
+
     StatusBarManagerInternal getStatusBarManagerInternal() {
         synchronized (mServiceAcquireLock) {
             if (mStatusBarManagerInternal == null) {
@@ -496,6 +499,19 @@ public class DisplayPolicy {
             mScreenOnEarly = true;
             mScreenOnFully = true;
         }
+        try {
+            mMtkPerf = vendor.mediatek.hardware.mtkpower.V1_1.IMtkPerf.getService();
+        } catch(Throwable t) {
+            android.util.Log.d("PHH-Power", "Retrieving mtkpower 1.0", t);
+            mMtkPerf = null;
+        }
+
+        try {
+            mOldMtkPerf = vendor.mediatek.hardware.mtkpower.V1_0.IMtkPower.getService();
+        } catch(Throwable t) {
+            android.util.Log.d("PHH-Power", "Retrieving mtkpower 1.0", t);
+            mOldMtkPerf = null;
+        }
 
         if (mPerf != null) {
             SCROLL_BOOST_SS_ENABLE = Boolean.parseBoolean(mPerf.perfGetProp("vendor.perf.gestureflingboost.enable", "false"));
@@ -586,6 +602,17 @@ public class DisplayPolicy {
                         mService.mPowerManagerInternal.setPowerBoost(
                                 Boost.INTERACTION, duration);
                     }
+                    if(mOldMtkPerf != null) {
+                        try {
+                            android.util.Log.d("PHH-Power", "mtk1 fling power hint");
+                            int hint = 36; // MTKPOWER_HINT_APP_TOUCH
+                            if("rotate".equals(SystemProperties.get("persist.sys.phh.touch_hint")))
+                                    hint = 35; // MTKPOWER_HINT_APP_ROTATE
+                            mOldMtkPerf.mtkPowerHint(hint, duration);
+                        } catch(Throwable t) {
+                            android.util.Log.d("PHH-Power", "Failed sending touch power hint", t);
+                        }
+                    }
                 }
 
                 @Override
@@ -604,6 +631,28 @@ public class DisplayPolicy {
                     if (listener != null) {
                         listener.onTouchStart();
                     }
+                    if(mMtkPerf != null) {
+                        try {
+                            android.util.Log.d("PHH-Power", "mtk power hint");
+                            int hint = 25; //MTKPOWER_HINT_APP_TOUCH
+                            if("rotate".equals(SystemProperties.get("persist.sys.phh.touch_hint")))
+                                    hint = 24; // MTKPOWER_HINT_APP_ROTATE
+                            mMtkPerf.perfCusLockHint(hint, 1000);
+                        } catch(Throwable t) {
+                            android.util.Log.d("PHH-Power", "Failed sending touch power hint", t);
+                        }
+                    }
+                    if(mOldMtkPerf != null) {
+                        try {
+                            android.util.Log.d("PHH-Power", "mtk1 power hint");
+                            int hint = 36; // MTKPOWER_HINT_APP_TOUCH
+                            if("rotate".equals(SystemProperties.get("persist.sys.phh.touch_hint")))
+                                    hint = 35; // MTKPOWER_HINT_APP_ROTATE
+                            mOldMtkPerf.mtkPowerHint(hint, 1000);
+                        } catch(Throwable t) {
+                            android.util.Log.d("PHH-Power", "Failed sending touch power hint", t);
+                        }
+                    }
                 }
 
                     @Override
-- 
2.34.1

